// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

//CÃ³digo disponibilizado em https://github.com/ana2pn/Snake-Elementos

class SnakeGame {
   field Snake snake; // the Snake of this game
   field Snake dot1;
   field Snake dot2;
   field Snake dot3;
   field Snake dot4;
   field Snake dot5;
   field int direction; // the square's current direction: 
                        // 0=none, 1=up, 2=down, 3=left, 4=right

   /** Constructs a new Square Game. */
   constructor SnakeGame new() {
      let snake = Snake.new(0, 0, 10);
      let dot1 = Snake.new(20, 150, 5);
      let dot2 = Snake.new(70, 200, 5);
      let dot3 = Snake.new(500, 170, 5);
      let dot4 = Snake.new(340, 220, 5);
      let dot5 = Snake.new(220, 150, 5);
      let direction = 0;  // initial state is no movement
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do snake.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the square in the current direction. */
   method void moveSnake() {
      if (direction = 1) { do snake.moveUp(); }
      if (direction = 2) { do snake.moveDown(); }
      if (direction = 3) { do snake.moveLeft(); }
      if (direction = 4) { do snake.moveRight(); }
      do Sys.wait(25);  // delays the next movement
      return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSnake();
         }

         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         //waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSnake();
         }
      }// while
     return;
   }
}



